{{- if .Values.alertmanager.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.alertmanager.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "fullname" . }}-{{ .Values.alertmanager.name }}
spec:
  replicas: {{ .Values.alertmanager.replicaCount }}
  template:
    metadata:
    {{- if .Values.alertmanager.podAnnotations }}
      annotations:
{{ toYaml .Values.alertmanager.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        app: {{ template "name" . }}
        component: "{{ .Values.alertmanager.name }}"
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "name" . }}-{{ .Values.alertmanager.name }}
          image: "{{ .Values.alertmanager.image.repository }}.repository }}:{{ .Values.alertmanager.image.tag }}"
          imagePullPolicy: "{{ .Values.alertmanager.image.pullPolicy }}"
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/data
          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.alertmanager.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: "{{ .Values.alertmanager.persistentVolume.subPath }}"

        - name: {{ template "name" . }}-{{ .Values.alertmanager.name }}-{{ .Values.configmapReload.name }}
          image: "{{ .Values.configmapReload.image.repository }}.repository }}:{{ .Values.configmapReload.image.tag }}"
          imagePullPolicy: "{{ .Values.configmapReload.image.pullPolicy }}"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9093/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
    {{- if .Values.alertmanager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.alertmanager.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "fullname" . }}-{{ .Values.alertmanager.name }}
        - name: storage-volume
        {{- if .Values.alertmanager.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.alertmanager.persistentVolume.existingClaim }}{{ .Values.alertmanager.persistentVolume.existingClaim }}{{- else }}{{ template "fullname" . }}-{{ .Values.alertmanager.name }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
{{- end }}
